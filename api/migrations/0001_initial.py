# Generated by Django 4.1.5 on 2023-02-16 03:57

import api.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgeRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('rating', models.CharField(max_length=8)),
                ('organization', models.CharField(choices=[('ESRB', 'ESRB'), ('PEGI', 'PEGI'), ('CERO', 'CERO'), ('USK', 'USK'), ('GRAC', 'GRAC'), ('CLASSIND', 'CLASSIND'), ('ACB', 'ACB')], default='ESRB', max_length=8)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('summary', models.CharField(blank=True, max_length=500, null=True)),
                ('story_line', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name='slug')),
                ('first_release', api.fields.UCDateTimeField(null=True)),
                ('type', models.CharField(choices=[('MG', 'Main Game'), ('DLC', 'DLC Addon'), ('EXP', 'Expansion'), ('BD', 'Bundle'), ('SEXP', 'Standalone Expansion'), ('MOD', 'Mod'), ('EP', 'Episode'), ('S', 'Season'), ('RM', 'Remake'), ('RMA', 'Remaster'), ('EG', 'Expanded Game'), ('P', 'Port'), ('F', 'Fork'), ('PCK', 'Pack'), ('U', 'Update')], max_length=4)),
                ('status', models.CharField(choices=[('F', 'Released'), ('A', 'Alpha'), ('B', 'Beta'), ('E', 'Early'), ('O', 'Offline'), ('C', 'Cancelled'), ('R', 'Rumored'), ('D', 'Delisted')], max_length=4)),
                ('age_ratings', models.ManyToManyField(to='api.agerating')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'ordering': ['-first_release'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.TextField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('animated', models.BooleanField(default=False)),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('image_id', models.SlugField(null=True, unique=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.TextField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('locale', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('native_ame', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['locale'],
            },
        ),
        migrations.CreateModel(
            name='ObjectWithImageField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('upload_path', models.TextField(max_length=30)),
                ('image', models.ImageField(blank=True, null=True, upload_to=models.TextField(max_length=30))),
                ('image_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=20, null=True)),
                ('alternative_name', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(choices=[('CONSOLE', 'Console'), ('ARCADE', 'Arcade'), ('PLATFORM', 'Platform'), ('OPERATING_SYSTEM', 'Operating System'), ('PORTABLE_CONSOLE', 'Portable Console'), ('COMPUTER', 'Computer'), ('UNDEFINED', 'Undefined')], max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPerspective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.TextField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('locale', models.CharField(max_length=10)),
                ('name', models.CharField(default='en-us', max_length=70)),
                ('type', models.CharField(choices=[('continent', 'Continent'), ('locale', 'Locale')], max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('type_id', models.PositiveIntegerField(choices=[(0, 'Theme'), (1, 'Genre'), (2, 'Keyword'), (3, 'Game')])),
                ('endpoint_id', models.PositiveIntegerField()),
                ('value', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.TextField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField(max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('imagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.imagebase')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.imagebase',),
        ),
        migrations.CreateModel(
            name='PlatformLogo',
            fields=[
                ('imagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.imagebase')),
                ('alpha_channel', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('api.imagebase',),
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('imagebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.imagebase')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.imagebase',),
        ),
        migrations.CreateModel(
            name='ReleaseDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', api.fields.UCDateTimeField(null=True)),
                ('region', models.CharField(choices=[('EU', 'Europe'), ('NA', 'North America'), ('AU', 'Australia'), ('NZ', 'New Zealand'), ('JP', 'Japan'), ('CH', 'China'), ('AS', 'Asia'), ('WW', 'Worldwide'), ('KR', 'Korea'), ('BR', 'Brazil')], max_length=50)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.platform')),
            ],
        ),
        migrations.CreateModel(
            name='Multiplayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('campaign_coop', models.BooleanField()),
                ('drop_in', models.BooleanField()),
                ('lan_coop', models.BooleanField()),
                ('offline_coop', models.BooleanField()),
                ('offline_coop_players', models.BooleanField()),
                ('offline_players', models.PositiveIntegerField()),
                ('online_coop', models.BooleanField()),
                ('online_coop_players', models.PositiveIntegerField()),
                ('online_players', models.PositiveIntegerField()),
                ('splitscreen', models.BooleanField()),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.platform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('category', models.IntegerField(choices=[(0, 'Official Website'), (1, 'Fandom Wiki'), (2, 'Wikipedia'), (3, 'Facebook'), (4, 'Twitter'), (5, 'Twitch'), (7, 'Instagram'), (8, 'Youtube'), (9, 'App Store (iPhone)'), (10, 'App Store (iPad)'), (11, 'Google Play'), (12, 'Steam'), (13, 'Subreddit'), (14, 'Itch.io'), (15, 'Epic Games'), (16, 'GoG'), (17, 'Official Discord')])),
                ('trusted', models.BooleanField(default=False)),
                ('url', models.URLField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.language')),
                ('support_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.supporttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('video_id', models.CharField(max_length=50)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GameModes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('name', models.TextField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField(max_length=250)),
                ('multiplayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.multiplayer')),
                ('player_perspective', models.ManyToManyField(to='api.playerperspective')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='game',
            name='genres',
            field=models.ManyToManyField(to='api.genre'),
        ),
        migrations.AddField(
            model_name='game',
            name='keywords',
            field=models.ManyToManyField(to='api.keyword'),
        ),
        migrations.AddField(
            model_name='game',
            name='release_dates',
            field=models.ManyToManyField(to='api.releasedate'),
        ),
        migrations.AddField(
            model_name='game',
            name='tags',
            field=models.ManyToManyField(to='api.tag'),
        ),
        migrations.AddField(
            model_name='game',
            name='themes',
            field=models.ManyToManyField(to='api.theme'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', api.fields.UCDateTimeField(auto_now_add=True)),
                ('updated_at', api.fields.UCDateTimeField(auto_now=True)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField(max_length=250)),
                ('games', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlternativeName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='LocaleCover',
            fields=[
                ('region_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.region')),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_cover', to='api.game')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.region',),
        ),
        migrations.AddField(
            model_name='game',
            name='cover',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.cover'),
        ),
        migrations.AddField(
            model_name='cover',
            name='locale_cover',
            field=models.ManyToManyField(to='api.localecover'),
        ),
    ]
